{"version":3,"sources":["components/common/items-list/items-list.module.css","pages/common/top-menu/top-menu.module.css","components/common/details-table/details-table.module.css","components/common/footer-navigation/footer-navigation.module.css","components/common/button/button.module.css","components/common/favorite-button/favorites-button.module.css","components/common/relations-links/relations-links.module.css","pages/common/page-layout/page-layout.module.css","components/common/flex/flex.module.css","pages/routes.ts","pages/system/NotFound.tsx","hooks/router.ts","utils/key-by.ts","store/sections/common/status.ts","utils/map-values.ts","store/sections/common/make-actions.ts","store/common/make-store.ts","store/sections/common/make-resource-store.ts","api/make-endpoint/utils.ts","api/make-endpoint/index.ts","api/resources.ts","store/sections/people.ts","store/sections/vehicles.ts","store/sections/films.ts","store/sections/planets.ts","store/favorites-urls/store.ts","utils/storage/index.ts","store/favorites-urls/actions.ts","store/favorites-urls/index.ts","components/common/link/internal.tsx","pages/common/top-menu/top-menu.tsx","pages/common/page-layout/index.tsx","components/common/button/index.tsx","components/common/footer-navigation/index.tsx","components/common/items-list/index.tsx","components/common/items-list/item-layout.tsx","components/common/details-table/index.tsx","components/common/favorite-button/index.tsx","components/vehicles/vehicles-list/vehicle.tsx","components/vehicles/vehicles-list/index.tsx","components/common/flex/index.tsx","components/common/entity-relation-link/index.tsx","components/common/relations-links/index.tsx","components/vehicles/vehicle-details/index.tsx","components/people/people-list/person.tsx","components/people/people-list/index.tsx","components/people/person-details/index.tsx","components/films/films-list/film.tsx","components/films/films-list/index.tsx","components/films/film-details/index.tsx","components/planets/planets-list/planet.tsx","components/planets/planets-list/index.tsx","components/planets/planet-details/index.tsx","pages/router.tsx","pages/films/films.tsx","pages/films/film.tsx","pages/vehicles/vehicles.tsx","pages/vehicles/vehicle.tsx","pages/people/people.tsx","pages/people/person.tsx","pages/planets/planets.tsx","pages/planets/planet.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","RouteNames","routesMap","films","path","film","vehicle","vehicles","people","person","planets","planet","NotFound","useCurrentPath","location","useLocation","pathname","search","join","keyBy","arr","key","result","forEach","value","keyValue","loadingStatus","loaded","loading","error","loadedStatus","setLoadingStatus","store","url","currentState","getState","change","statuses","setErrorStatus","composeLoadedStatusesMap","entitiesMap","map","iterate","mapValues","makeActions","api","loadPage","pageUrl","a","catch","err","detail","response","loadedEntitiesMap","results","loadedEntitiesStatuses","nextStatuses","nextResources","resources","nextPages","pages","nextState","loadEntity","entity","loadPageIfNeeded","status","loadEntityIfNeeded","makeStore","initialState","state","listeners","Set","subscribe","cb","add","delete","usePickState","pickProps","dependsOn","useState","setRendered","lastRenderedStateRef","useRef","useEffect","current","count","useMemo","makeResourceStore","composeUrl","parts","makeRequest","fetch","then","ok","json","js","Promise","reject","BASE_API_URL","removeBaseUrl","baseUrl","replace","makeApiEndpoint","urlKeys","normaliseEntity","relationKey","next","previous","entityUrl","filmsApi","vehiclesApi","peopleApi","planetsApi","actions","LOCAL_STORAGE_KEY","defaultValue","localStorage","getItem","JSON","parse","get","addToFavorite","removeFromFavorite","setItem","stringify","InternalLink","props","to","children","restProps","menuItems","label","routeName","TopNavigations","className","classNames","topMenuName","topMenuItems","item","topMenuItem","topMenuItemLink","PageLayout","pageLayout","Button","disabled","buttonClassName","cn","button","button__disabled","LinkOrText","href","FooterNavigation","footerNavigation","delimiter","defaultProps","ItemsList","title","items","Item","itemsList","index","ItemLayoutHeader","ItemLayoutFooter","itemLayoutFooter","ItemLayout","itemClassName","itemLayout","DetailsTable","details","titles","Object","keys","detailsTable","cellPadding","cellSpacing","detailsTableRow","detailsTableCell","RawIcon","xmlns","width","height","viewBox","onClick","d","FavoriteButton","isFavorite","favoritesUrls","favorites","Boolean","useCallback","iconClassName","favoriteButton","favoriteButtonActive","Vehicle","Model","model","Manufacturer","manufacturer","cost_in_credits","Length","length","Crew","crew","max_atmosphering_speed","Passengers","passengers","cargo_capacity","Consumables","consumables","vehicle_class","Pilots","pilots","Films","name","VehiclesList","Flex","as","Component","align","style","alignItems","flexWrap","wrap","flex","sections","resource","labelKey","EntityRelationLink","resourceName","RelationsLinks","relationUrls","relationType","relationsLinksItems","relationsLinksItem","VehicleDetails","Person","Gender","gender","birth_year","starships","PeopleList","PersonDetails","eye_color","hair_color","Height","homeworld","Mass","mass","Film","Episode","episode_id","Director","director","Producer","producer","release_date","FilmsList","entities","FilmDetails","opening_crawl","characters","Planet","Climate","climate","Diameter","diameter","Gravity","gravity","orbital_period","Population","population","rotation_period","Terrain","terrain","surface_water","PlanetsList","PlanetDetails","residents","routesPages","currentPath","page","Router","routeNames","console","log","process","basename","Page","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af2dfb00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemsList\":\"items-list_itemsList__3kME-\",\"itemLayout\":\"items-list_itemLayout__3RbPX\",\"itemLayoutFooter\":\"items-list_itemLayoutFooter__LjORe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topMenuName\":\"top-menu_topMenuName__2lxfc\",\"topMenuItems\":\"top-menu_topMenuItems__23Ydh\",\"topMenuItem\":\"top-menu_topMenuItem__1pVlc\",\"topMenuItemLink\":\"top-menu_topMenuItemLink__HeIlp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailsTable\":\"details-table_detailsTable__3xnTO\",\"detailsTableRow\":\"details-table_detailsTableRow__2qn70\",\"detailsTableCell\":\"details-table_detailsTableCell__31icw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerNavigation\":\"footer-navigation_footerNavigation__2EfYT\",\"delimiter\":\"footer-navigation_delimiter__1K03z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__w3LgW\",\"button__disabled\":\"button_button__disabled__3WfQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favoriteButton\":\"favorites-button_favoriteButton__1o2XY\",\"favoriteButtonActive\":\"favorites-button_favoriteButtonActive__2YjA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"relationsLinksList\":\"relations-links_relationsLinksList__3udLq\",\"relationsLinksItems\":\"relations-links_relationsLinksItems__2m5Ga\",\"relationsLinksItem\":\"relations-links_relationsLinksItem__Vrlg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageLayout\":\"page-layout_pageLayout__2BINC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"flex_flex__1ieTi\"};","enum RouteNames {\n  films = 'films',\n  film = 'film',\n\n  vehicles = 'vehicles',\n  vehicle = 'vehicle',\n\n  people = 'people',\n  person = 'person',\n\n  planets = 'planets',\n  planet = 'planet',\n}\n\nconst routesMap = {\n  [RouteNames.films]: { path: '/films' },\n  [RouteNames.film]: { path: '/films/:id' },\n  [RouteNames.vehicle]: { path: '/vehicles/:id' },\n  [RouteNames.vehicles]: { path: '/vehicles' },\n  [RouteNames.vehicle]: { path: '/vehicles/:id' },\n  [RouteNames.people]: { path: '/people' },\n  [RouteNames.person]: { path: '/people/:id' },\n  [RouteNames.planets]: { path: '/planets' },\n  [RouteNames.planet]: { path: '/planets/:id' },\n}\n\nexport { RouteNames, routesMap }\n","export interface NotFoundPropsI {}\n\nfunction NotFound() {\n  return <h1>Not found</h1>\n}\n\nexport { NotFound }\n","import { useLocation } from 'react-router-dom'\n\nfunction useCurrentPath(): string {\n  const location = useLocation()\n\n  return [location.pathname, location.search].join('')\n}\n\nexport { useCurrentPath, useLocation }\n","import Dictionary from '../interfaces/utils'\n\nfunction keyBy<T extends { [P in keyof T]: T[P] }>(\n  arr: T[],\n  key: keyof T\n): Dictionary<T> {\n  const result: Dictionary<T> = {}\n\n  arr.forEach(value => {\n    const keyValue = value[key]\n\n    result[keyValue] = value\n  })\n\n  return result\n}\n\nexport { keyBy }\n","import { mapValues } from 'utils/map-values'\n\nimport Dictionary from 'interfaces/utils'\nimport { LoadStatusI } from 'interfaces/load-status'\nimport { StoreI } from 'store/common/make-store'\n\nexport const loadingStatus: LoadStatusI = {\n  loaded: false,\n  loading: true,\n  error: null,\n}\n\nexport const loadedStatus: LoadStatusI = {\n  loaded: true,\n  loading: false,\n  error: null,\n}\n\nexport function setLoadingStatus<\n  T extends { statuses: Dictionary<LoadStatusI> }\n>(store: StoreI<T>, url: string) {\n  const currentState = store.getState()\n\n  store.change({\n    ...currentState,\n    statuses: {\n      ...currentState.statuses,\n      [url]: loadingStatus,\n    },\n  })\n}\n\nexport function setErrorStatus<T extends { statuses: Dictionary<LoadStatusI> }>(\n  store: StoreI<T>,\n  url: string,\n  error: string\n) {\n  const currentState = store.getState()\n\n  store.change({\n    ...currentState,\n    statuses: {\n      ...currentState.statuses,\n      [url]: { ...loadedStatus, error },\n    },\n  })\n}\n\nexport function composeLoadedStatusesMap<T>(entitiesMap: Dictionary<T>) {\n  return mapValues(entitiesMap, () => loadedStatus)\n}\n","import Dictionary from '../interfaces/utils'\n\nfunction mapValues<T, R>(\n  map: Dictionary<T>,\n  iterate: (value: T, key: string) => R\n) {\n  const result: Dictionary<R> = {}\n\n  for (let key in map) {\n    result[key] = iterate(map[key], key)\n  }\n\n  return result\n}\n\nexport { mapValues }\n","import { keyBy } from 'utils/key-by'\n\nimport {\n  setErrorStatus,\n  setLoadingStatus,\n  composeLoadedStatusesMap,\n  loadedStatus,\n} from './status'\n\nimport { StoreI } from 'store/common/make-store'\nimport { ResourceApiI } from 'api/make-endpoint'\nimport { ResourceStateI } from './make-resource-store'\n\nfunction makeActions<T extends { url: string }>(\n  api: ResourceApiI<T>,\n  store: StoreI<ResourceStateI<T>>\n) {\n  async function loadPage(pageUrl: string) {\n    setLoadingStatus(store, pageUrl)\n\n    const response = await api\n      .loadPage(pageUrl)\n      .catch((err: { detail: string }) => {\n        setErrorStatus(store, pageUrl, err.detail)\n\n        throw err\n      })\n\n    const loadedEntitiesMap = keyBy(response.results, 'url')\n    const loadedEntitiesStatuses = composeLoadedStatusesMap(loadedEntitiesMap)\n\n    const currentState = store.getState()\n\n    const nextStatuses = {\n      ...currentState.statuses,\n      ...loadedEntitiesStatuses,\n      [pageUrl]: loadedStatus,\n    }\n\n    const nextResources = {\n      ...currentState.resources,\n      ...loadedEntitiesMap,\n    }\n\n    const nextPages = { ...currentState.pages, [pageUrl]: response }\n\n    const nextState = {\n      ...currentState,\n      statuses: nextStatuses,\n      resources: nextResources,\n      pages: nextPages,\n    }\n\n    store.change(nextState)\n  }\n\n  async function loadEntity(pageUrl: string) {\n    setLoadingStatus(store, pageUrl)\n\n    const entity = await api\n      .loadEntity(pageUrl)\n      .catch((err: { detail: string }) => {\n        setErrorStatus(store, pageUrl, err.detail)\n\n        throw err\n      })\n\n    const currentState = store.getState()\n\n    const nextStatuses = {\n      ...currentState.statuses,\n      [pageUrl]: loadedStatus,\n    }\n\n    const nextResources = {\n      ...currentState.resources,\n      [pageUrl]: entity,\n    }\n\n    const nextState = {\n      ...currentState,\n      pages: currentState.pages,\n      statuses: nextStatuses,\n      resources: nextResources,\n    }\n\n    store.change(nextState)\n  }\n\n  function loadPageIfNeeded(pageUrl: string) {\n    const status = store.getState().statuses[pageUrl]\n\n    if (status && (status.loaded || status.loading)) {\n      return\n    }\n\n    return loadPage(pageUrl)\n  }\n\n  function loadEntityIfNeeded(pageUrl: string) {\n    const status = store.getState().statuses[pageUrl]\n\n    if (status && (status.loaded || status.loading)) {\n      return\n    }\n\n    return loadEntity(pageUrl)\n  }\n\n  return { loadPage, loadEntity, loadPageIfNeeded, loadEntityIfNeeded }\n}\n\nexport { makeActions }\n","import { useEffect, useMemo, useRef, useState } from 'react'\n\nexport type ChangeStateI<T> = (state: T) => void\nexport type GetStateI<T> = () => T\nexport type PickStateI<T, R> = (state: T) => R\nexport type ChangeStoreListenerI<T> = (state: T) => void\nexport type SubscribeI<T> = (cb: ChangeStoreListenerI<T>) => () => void\n\nexport type StoreI<T> = {\n  change: ChangeStateI<T>\n  getState: GetStateI<T>\n  subscribe: SubscribeI<T>\n}\n\nfunction makeStore<T>(initialState: T) {\n  let state = initialState\n\n  const listeners = new Set<ChangeStoreListenerI<T>>()\n\n  const subscribe: SubscribeI<T> = cb => {\n    listeners.add(cb)\n\n    return () => {\n      listeners.delete(cb)\n    }\n  }\n\n  const notify = () => {\n    listeners.forEach(cb => {\n      cb(state)\n    })\n  }\n\n  const change: ChangeStateI<T> = nextState => {\n    state = nextState\n    notify()\n  }\n\n  const getState: GetStateI<T> = () => state\n\n  const usePickState = <R>(\n    pickProps: PickStateI<T, R>,\n    dependsOn: ReadonlyArray<unknown> = []\n  ) => {\n    const [, setRendered] = useState(0)\n\n    const lastRenderedStateRef = useRef(state)\n\n    useEffect(() => {\n      return subscribe(nextState => {\n        if (lastRenderedStateRef.current !== nextState) {\n          setRendered(count => ++count)\n        }\n      })\n    }, [])\n\n    return useMemo(() => {\n      lastRenderedStateRef.current = state\n\n      return pickProps(state)\n    }, [state, ...dependsOn])\n  }\n\n  return { subscribe, change, getState, usePickState }\n}\n\nexport { makeStore }\n","import { makeStore } from 'store/common/make-store'\n\nimport Dictionary from 'interfaces/utils'\nimport { LoadStatusI } from 'interfaces/load-status'\nimport { PageI } from 'interfaces/page'\n\nexport type ResourceStateI<T> = {\n  statuses: Dictionary<LoadStatusI>\n  resources: Dictionary<T>\n  pages: Dictionary<PageI<T>>\n}\n\nexport function makeResourceStore<T>() {\n  const initialState: ResourceStateI<T> = {\n    resources: {},\n    statuses: {},\n    pages: {},\n  }\n\n  return makeStore(initialState)\n}\n","import Dictionary from 'interfaces/utils'\n\nfunction composeUrl(...parts: (string | number)[]) {\n  return parts.join('')\n}\n\nfunction makeRequest<T>(url: string): Promise<T> {\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      return response.json().then(js => Promise.reject(js))\n    }\n\n    return response.json()\n  })\n}\n\nfunction composeQueryString(props: Dictionary<string>) {\n  return new URLSearchParams(props).toString()\n}\n\nexport { composeUrl, composeQueryString, makeRequest }\n","import { composeUrl, makeRequest } from './utils'\n\nimport { PageI } from 'interfaces/page'\n\nconst BASE_API_URL = 'https://swapi.dev/api'\n\nfunction removeBaseUrl(url: string, baseUrl: string) {\n  return url.replace(baseUrl, '')\n}\n\nexport type ResourceApiI<T> = {\n  loadPage: (pageUrl: string) => Promise<PageI<T>>\n  loadEntity: (pageUrl: string) => Promise<T>\n}\n\nfunction makeApiEndpoint<T extends object>(urlKeys: string[]): ResourceApiI<T> {\n  function normaliseEntity(entity: T) {\n    urlKeys.forEach(relationKey => {\n      // TODO: find better solution to define types\n      const value = (entity as any)[relationKey]\n\n      ;(entity as any)[relationKey] =\n        typeof value === 'string'\n          ? removeBaseUrl(value, BASE_API_URL)\n          : value.map((url: string) => removeBaseUrl(url, BASE_API_URL))\n    })\n\n    return entity\n  }\n\n  async function loadPage(pageUrl: string): Promise<PageI<T>> {\n    const url = composeUrl(BASE_API_URL, pageUrl)\n\n    const response: PageI<T> = await makeRequest(url)\n    const { next, previous, results } = response\n\n    return {\n      ...response,\n      next: next && removeBaseUrl(next, BASE_API_URL),\n      previous: previous && removeBaseUrl(previous, BASE_API_URL),\n      results: results.map(entity => normaliseEntity(entity)),\n    }\n  }\n\n  async function loadEntity(url: string) {\n    const entityUrl = composeUrl(BASE_API_URL, url)\n\n    const entity = await makeRequest<T>(entityUrl)\n\n    return normaliseEntity(entity)\n  }\n\n  return { loadEntity, loadPage }\n}\n\nexport { makeApiEndpoint }\n","import { makeApiEndpoint } from './make-endpoint'\n\nimport { VehicleI } from 'interfaces/vehicles'\nimport { PersonI } from 'interfaces/people'\nimport { FilmI } from 'interfaces/films'\nimport { PlanetI } from '../interfaces/planets'\n\nexport const filmsApi = makeApiEndpoint<FilmI>([\n  'characters',\n  'planets',\n  'starships',\n  'vehicles',\n  'species',\n])\nexport const vehiclesApi = makeApiEndpoint<VehicleI>(['pilots', 'films', 'url'])\nexport const peopleApi = makeApiEndpoint<PersonI>([\n  'films',\n  'species',\n  'vehicles',\n  'starships',\n  'homeworld',\n  'url',\n])\nexport const planetsApi = makeApiEndpoint<PlanetI>([\n  'residents',\n  'films',\n  'url',\n])\n","import { makeActions } from './common/make-actions'\nimport { makeResourceStore } from './common/make-resource-store'\n\nimport { PersonI } from 'interfaces/people'\n\nimport { peopleApi } from 'api/resources'\n\nconst store = makeResourceStore<PersonI>()\nconst actions = makeActions(peopleApi, store)\n\nexport default {\n  store,\n  actions,\n}\n","import { makeActions } from './common/make-actions'\nimport { makeResourceStore } from './common/make-resource-store'\n\nimport { VehicleI } from 'interfaces/vehicles'\n\nimport { vehiclesApi } from 'api/resources'\n\nconst store = makeResourceStore<VehicleI>()\nconst actions = makeActions(vehiclesApi, store)\n\nexport default {\n  store,\n  actions,\n}\n","import { makeActions } from './common/make-actions'\nimport { makeResourceStore } from './common/make-resource-store'\n\nimport { FilmI } from 'interfaces/films'\n\nimport { filmsApi } from 'api/resources'\n\nconst store = makeResourceStore<FilmI>()\nconst actions = makeActions(filmsApi, store)\n\nexport default {\n  store,\n  actions,\n}\n","import { makeActions } from './common/make-actions'\nimport { makeResourceStore } from './common/make-resource-store'\n\nimport { PlanetI } from 'interfaces/planets'\n\nimport { planetsApi } from 'api/resources'\n\nconst store = makeResourceStore<PlanetI>()\nconst actions = makeActions(planetsApi, store)\n\nexport default {\n  store,\n  actions,\n}\n","import Dictionary from 'interfaces/utils'\n\nimport { set, get } from 'utils/storage'\n\nimport { makeStore } from '../common/make-store'\n\nconst LOCAL_STORAGE_KEY = '__favorites'\n\nconst initialState: Dictionary<boolean> = get(LOCAL_STORAGE_KEY, {})\n\nconst store = makeStore(initialState)\n\n// Storage favorites urls\nstore.subscribe(nextState => set(LOCAL_STORAGE_KEY, nextState))\n\nexport { store }\n","function get<T>(key: string, defaultValue: T): T {\n  const value = localStorage.getItem(key)\n\n  return value !== null ? JSON.parse(value) : defaultValue\n}\n\nfunction set<T>(key: string, value: T) {\n  return localStorage.setItem(key, JSON.stringify(value))\n}\n\nexport { get, set }\n","import { store } from './store'\n\nexport function addToFavorite(pageUrl: string) {\n  const state = store.getState()\n\n  const nextState = { ...state, [pageUrl]: true }\n\n  return store.change(nextState)\n}\n\nexport function removeFromFavorite(pageUrl: string) {\n  const state = store.getState()\n\n  const nextState = { ...state }\n  delete nextState[pageUrl]\n\n  return store.change(nextState)\n}\n","import { store } from './store'\nimport * as actions from './actions'\n\nexport default { store, actions }\n","import { ReactNode } from 'react'\nimport { Link, LinkProps } from 'react-router-dom'\n\nexport interface InternalLinkPropsI extends LinkProps {\n  to: string\n  children: ReactNode\n}\n\nfunction InternalLink(props: InternalLinkPropsI) {\n  const { to, children, ...restProps } = props\n\n  const url = to ? to.replace('https://swapi.dev/api', '') : ''\n\n  return (\n    <Link to={url} {...restProps}>\n      {children}\n    </Link>\n  )\n}\n\nexport { InternalLink }\n","import classNames from './top-menu.module.css'\n\nimport { routesMap, RouteNames } from 'pages/routes'\n\nimport { InternalLink } from 'components/common/link/internal'\n\nconst menuItems = [\n  {\n    label: 'Films',\n    routeName: RouteNames.films,\n    path: routesMap[RouteNames.films].path,\n  },\n  {\n    label: 'Vehicles',\n    routeName: RouteNames.vehicles,\n    path: routesMap[RouteNames.vehicles].path,\n  },\n  {\n    label: 'People',\n    routeName: RouteNames.people,\n    path: routesMap[RouteNames.people].path,\n  },\n\n  {\n    label: 'Planets',\n    routeName: RouteNames.planets,\n    path: routesMap[RouteNames.planets].path,\n  },\n]\n\nfunction TopNavigations() {\n  return (\n    <nav>\n      <header className={classNames.topMenuName}>\n        <h3>Sections:</h3>\n      </header>\n      <ul className={classNames.topMenuItems}>\n        {menuItems.map(item => {\n          return (\n            <li key={item.routeName} className={classNames.topMenuItem}>\n              <InternalLink\n                to={item.path}\n                className={classNames.topMenuItemLink}>\n                {item.label}\n              </InternalLink>\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n  )\n}\n\nexport { TopNavigations }\n","import classNames from './page-layout.module.css'\n\nimport { ReactNode } from 'react'\n\nimport { TopNavigations } from '../top-menu/top-menu'\n\nexport interface PageLayoutPropsI {\n  children: ReactNode\n}\n\nfunction PageLayout(props: PageLayoutPropsI) {\n  const { children } = props\n\n  return (\n    <div className={classNames.pageLayout}>\n      <TopNavigations />\n      {children}\n    </div>\n  )\n}\n\nexport { PageLayout }\n","import classNames from './button.module.css'\n\nimport cn from 'classnames'\n\nimport { ButtonHTMLAttributes } from 'react'\n\nexport interface ButtonPropsI extends ButtonHTMLAttributes<HTMLButtonElement> {\n  disabled: boolean\n}\n\nfunction Button(props: ButtonPropsI) {\n  const { className, disabled, children, ...restProps } = props\n\n  const buttonClassName = cn(className, classNames.button, {\n    [classNames.button__disabled]: disabled,\n  })\n\n  return (\n    <button {...restProps} className={buttonClassName}>\n      {children}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  disabled: false,\n}\n\nexport { Button }\n","import classNames from './footer-navigation.module.css'\n\nimport { ReactNode } from 'react'\n\nimport { InternalLink } from 'components/common/link/internal'\nimport { Button } from 'components/common/button'\n\nexport interface FooterNavigationPropsI {\n  next: string | null\n  previous: string | null\n}\n\nfunction LinkOrText(props: { href: string | null; children: ReactNode }) {\n  const { href, children } = props\n\n  return href ? (\n    <InternalLink to={href}>\n      <Button>{children}</Button>\n    </InternalLink>\n  ) : (\n    <Button disabled>{children}</Button>\n  )\n}\n\nfunction FooterNavigation(props: FooterNavigationPropsI) {\n  const { next, previous } = props\n\n  return (\n    <footer className={classNames.footerNavigation}>\n      <LinkOrText href={previous}>Previous</LinkOrText>\n      <span className={classNames.delimiter}>|</span>\n      <LinkOrText href={next}>Next</LinkOrText>\n    </footer>\n  )\n}\n\nexport { FooterNavigation }\n","import classNames from './items-list.module.css'\nimport { ComponentType } from 'react'\n\nexport interface ItemsListPropsI<T> {\n  title: string\n  items: T[]\n  Item: ComponentType<{ item: T }>\n}\n\nfunction ItemsList<T>(props: ItemsListPropsI<T>) {\n  const { title, items, Item } = props\n\n  return (\n    <section>\n      <header>\n        <h1>{title}</h1>\n      </header>\n      <div className={classNames.itemsList}>\n        {items.map((item, index) => {\n          return <Item key={index} item={item} />\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport { ItemsList }\n","import classNames from './items-list.module.css'\n\nimport cn from 'classnames'\nimport { ReactNode } from 'react'\n\nexport interface ItemLayoutPropsI {\n  children: ReactNode\n  className?: string\n}\n\nfunction ItemLayoutHeader(props: { title: string }) {\n  return (\n    <header>\n      <h3>{props.title}</h3>\n    </header>\n  )\n}\nfunction ItemLayoutFooter(props: { children: ReactNode }) {\n  return (\n    <footer className={classNames.itemLayoutFooter}>{props.children}</footer>\n  )\n}\n\nfunction ItemLayout(props: ItemLayoutPropsI) {\n  const { children, className } = props\n\n  const itemClassName = cn(className, classNames.itemLayout)\n\n  return <article className={itemClassName}>{children}</article>\n}\n\nexport { ItemLayout, ItemLayoutHeader, ItemLayoutFooter }\n","import classNames from './details-table.module.css'\n\nimport Dictionary from 'interfaces/utils'\n\nexport interface DetailsTablePropsI {\n  // TODO: refactor details format to { title, value }[]\n  // and add support to show dynamic link\n  details: Dictionary<string | number>\n}\n\nfunction DetailsTable(props: DetailsTablePropsI) {\n  const { details } = props\n\n  const titles = Object.keys(details)\n\n  return (\n    <table className={classNames.detailsTable} cellPadding=\"0\" cellSpacing=\"0\">\n      <tbody>\n        {titles.map(title => {\n          return (\n            <tr key={title} className={classNames.detailsTableRow}>\n              <td className={classNames.detailsTableCell}>\n                <b>{title}</b>\n              </td>\n              <td className={classNames.detailsTableCell}>{details[title]}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nexport { DetailsTable }\n","import classNames from './favorites-button.module.css'\n\nimport cn from 'classnames'\n\nimport { useCallback } from 'react'\nimport { favoritesUrls } from 'store'\n\nfunction RawIcon(props: { className: string; onClick: () => void }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      className={props.className}\n      onClick={props.onClick}>\n      <path d=\"M12 4.248c-3.148-5.402-12-3.825-12 2.944 0 4.661 5.571 9.427 12 15.808 6.43-6.381 12-11.147 12-15.808 0-6.792-8.875-8.306-12-2.944z\" />\n    </svg>\n  )\n}\n\nexport interface FavoriteButtonPropsI {\n  url: string\n}\n\nfunction FavoriteButton(props: FavoriteButtonPropsI) {\n  const { url } = props\n\n  const isFavorite = favoritesUrls.store.usePickState(\n    favorites => {\n      return Boolean(favorites[url])\n    },\n    [url]\n  )\n\n  const onClick = useCallback(() => {\n    const favorites = favoritesUrls.store.getState()\n\n    const action = favorites[url]\n      ? favoritesUrls.actions.removeFromFavorite\n      : favoritesUrls.actions.addToFavorite\n\n    action(url)\n  }, [url])\n\n  const iconClassName = cn(classNames.favoriteButton, {\n    [classNames.favoriteButtonActive]: isFavorite,\n  })\n\n  return <RawIcon className={iconClassName} onClick={onClick} />\n}\n\nexport { FavoriteButton }\n","import { VehicleI } from 'interfaces/vehicles'\n\nimport { InternalLink } from 'components/common/link/internal'\nimport {\n  ItemLayout,\n  ItemLayoutHeader,\n  ItemLayoutFooter,\n} from 'components/common/items-list/item-layout'\nimport { DetailsTable } from 'components/common/details-table'\nimport { FavoriteButton } from '../../common/favorite-button'\n\nexport interface VehiclePropsI {\n  item: VehicleI\n}\n\nfunction Vehicle(props: VehiclePropsI) {\n  const { item } = props\n\n  const details = {\n    Model: item.model,\n    Manufacturer: item.manufacturer,\n    'Cost in credits': item.cost_in_credits,\n    Length: item.length,\n    Crew: item.crew,\n    'Max atmosphering speed': item.max_atmosphering_speed,\n    Passengers: item.passengers,\n    'Cargo capacity': item.cargo_capacity,\n    Consumables: item.consumables,\n    'Vehicle class': item.vehicle_class,\n    Pilots: item.pilots.length,\n    Films: item.films.length,\n  }\n\n  return (\n    <ItemLayout>\n      <ItemLayoutHeader title={item.name} />\n      <DetailsTable details={details} />\n      <ItemLayoutFooter>\n        <InternalLink to={item.url}>Reed more...</InternalLink>\n        <FavoriteButton url={item.url} />\n      </ItemLayoutFooter>\n    </ItemLayout>\n  )\n}\n\nexport { Vehicle }\n","import { VehicleI } from 'interfaces/vehicles'\n\nimport { ItemsList } from 'components/common/items-list'\nimport { Vehicle } from './vehicle'\n\nexport interface VehiclesListPropsI {\n  vehicles: VehicleI[]\n}\n\nfunction VehiclesList(props: VehiclesListPropsI) {\n  const { vehicles } = props\n\n  return <ItemsList items={vehicles} Item={Vehicle} title=\"Vehicles:\" />\n}\n\nexport { VehiclesList }\n","import classNames from './flex.module.css'\n\nimport { ReactNode } from 'react'\n\nexport interface FlexPropsI {\n  children: ReactNode\n  align?: 'center' | 'start'\n  wrap?: boolean\n  as?: keyof JSX.IntrinsicElements\n}\n\nfunction Flex(props: FlexPropsI) {\n  const { children, as: Component = 'div', align = 'center', wrap } = props\n\n  const style = {\n    alignItems: align,\n    flexWrap: wrap ? 'wrap' : 'nowrap',\n  } as const\n\n  return (\n    <Component className={classNames.flex} style={style}>\n      {children}\n    </Component>\n  )\n}\n\nexport { Flex }\n","import { useEffect } from 'react'\nimport { films, vehicles, people, planets } from 'store'\n\nimport { InternalLink } from 'components/common/link/internal'\n\nconst sections = {\n  films: { resource: films, labelKey: 'title' },\n  vehicles: { resource: vehicles, labelKey: 'name' },\n  people: { resource: people, labelKey: 'name' },\n  planets: { resource: planets, labelKey: 'name' },\n}\n\nexport interface EntityRelationLinkPropsI {\n  url: string\n  resourceName: keyof typeof sections\n}\n\nfunction EntityRelationLink(props: EntityRelationLinkPropsI) {\n  const { url, resourceName } = props\n\n  const { resource, labelKey } = sections[resourceName]\n\n  useEffect(() => {\n    resource.actions.loadEntityIfNeeded(url)\n  }, [url])\n\n  const status = resource.store.usePickState(\n    state => state.statuses[url],\n    [url]\n  )\n\n  const entity = resource.store.usePickState(\n    state => state.resources[url],\n    [url]\n  )\n\n  if (!status?.loaded) {\n    return <span>Loading...</span>\n  }\n\n  if (status?.error) {\n    return <span>Error: {status?.error}</span>\n  }\n\n  // TODO: find another way to pick right type\n  const title = entity[labelKey as keyof typeof entity] || '-- || --'\n\n  return <InternalLink to={url}>{title}</InternalLink>\n}\n\nexport { EntityRelationLink }\n","import classNames from './relations-links.module.css'\n\nimport {\n  EntityRelationLink,\n  EntityRelationLinkPropsI,\n} from '../entity-relation-link'\n\nexport interface RelationsLinksPropsI {\n  title: string\n  relationUrls: string[]\n  relationType: EntityRelationLinkPropsI['resourceName']\n}\n\nfunction RelationsLinks(props: RelationsLinksPropsI) {\n  const { title, relationUrls, relationType } = props\n\n  return (\n    <article>\n      <header>\n        <h3>{title}</h3>\n      </header>\n      <ul className={classNames.relationsLinksItems}>\n        {relationUrls.map(url => {\n          return (\n            <li key={url} className={classNames.relationsLinksItem}>\n              <EntityRelationLink url={url} resourceName={relationType} />\n            </li>\n          )\n        })}\n        {!relationUrls.length && <li>¯\\_(ツ)_/¯</li>}\n      </ul>\n    </article>\n  )\n}\n\nexport { RelationsLinks }\n","import { VehicleI } from 'interfaces/vehicles'\n\nimport { Flex } from 'components/common/flex'\nimport { FavoriteButton } from 'components/common/favorite-button'\nimport { DetailsTable } from 'components/common/details-table'\nimport { RelationsLinks } from 'components/common/relations-links'\n\nexport interface VehicleDetailsPropsI {\n  entity: VehicleI\n}\n\nfunction VehicleDetails(props: VehicleDetailsPropsI) {\n  const { entity } = props\n\n  const details = {\n    Model: entity.model,\n    Manufacturer: entity.manufacturer,\n    'Cost in credits': entity.cost_in_credits,\n    Length: entity.length,\n    Crew: entity.crew,\n    'Max atmosphering speed': entity.max_atmosphering_speed,\n    Passengers: entity.passengers,\n    'Cargo capacity': entity.cargo_capacity,\n    Consumables: entity.consumables,\n    'Vehicle class': entity.vehicle_class,\n  }\n\n  return (\n    <article>\n      <Flex as=\"header\">\n        <h1>{entity.name}</h1>\n        <FavoriteButton url={entity.url} />\n      </Flex>\n      <DetailsTable details={details} />\n      <RelationsLinks\n        title=\"Pilots:\"\n        relationType=\"people\"\n        relationUrls={entity.pilots}\n      />\n      <RelationsLinks\n        title=\"Films:\"\n        relationType=\"films\"\n        relationUrls={entity.films}\n      />\n    </article>\n  )\n}\n\nexport { VehicleDetails }\n","import { PersonI } from 'interfaces/people'\n\nimport { InternalLink } from 'components/common/link/internal'\nimport {\n  ItemLayout,\n  ItemLayoutHeader,\n  ItemLayoutFooter,\n} from 'components/common/items-list/item-layout'\nimport { DetailsTable } from 'components/common/details-table'\nimport { FavoriteButton } from 'components/common/favorite-button'\n\nexport interface PersonPropsI {\n  item: PersonI\n}\n\nfunction Person(props: PersonPropsI) {\n  const { item } = props\n\n  const details = {\n    Gender: item.gender,\n    'Birth year': item.birth_year,\n    'Starships count': item.starships.length,\n    'Vehicles count': item.vehicles.length,\n    'Films count': item.films.length,\n  }\n\n  return (\n    <ItemLayout>\n      <ItemLayoutHeader title={item.name} />\n      <DetailsTable details={details} />\n      <ItemLayoutFooter>\n        <InternalLink to={item.url}>Reed more...</InternalLink>\n        <FavoriteButton url={item.url} />\n      </ItemLayoutFooter>\n    </ItemLayout>\n  )\n}\n\nexport { Person }\n","import { PersonI } from 'interfaces/people'\n\nimport { ItemsList } from 'components/common/items-list'\nimport { Person } from './person'\n\nexport interface PeopleListPropsI {\n  people: PersonI[]\n}\n\nfunction PeopleList(props: PeopleListPropsI) {\n  const { people } = props\n\n  return <ItemsList items={people} Item={Person} title=\"People:\" />\n}\n\nexport { PeopleList }\n","import { PersonI } from 'interfaces/people'\n\nimport { Flex } from 'components/common/flex'\nimport { FavoriteButton } from 'components/common/favorite-button'\nimport { DetailsTable } from 'components/common/details-table'\nimport { RelationsLinks } from 'components/common/relations-links'\nimport { EntityRelationLink } from 'components/common/entity-relation-link'\n\nexport interface PersonDetailsPropsI {\n  entity: PersonI\n}\n\nfunction PersonDetails(props: PersonDetailsPropsI) {\n  const { entity } = props\n\n  const details = {\n    Gender: entity.gender,\n    'Birth year': entity.birth_year,\n    'Eye color': entity.eye_color,\n    'Hair color': entity.hair_color,\n    Height: entity.height,\n    'Home world': entity.homeworld,\n    Mass: entity.mass,\n  }\n\n  return (\n    <article>\n      <Flex as=\"header\">\n        <h1>{entity.name}</h1>\n        <FavoriteButton url={entity.url} />\n      </Flex>\n      <div>\n        Home worlds:{' '}\n        <EntityRelationLink url={entity.homeworld} resourceName=\"planets\" />\n      </div>\n      <DetailsTable details={details} />\n      <RelationsLinks\n        title=\"Films:\"\n        relationType=\"films\"\n        relationUrls={entity.films}\n      />\n      <RelationsLinks\n        title=\"Vehicles:\"\n        relationType=\"vehicles\"\n        relationUrls={entity.vehicles}\n      />\n    </article>\n  )\n}\n\nexport { PersonDetails }\n","import { FilmI } from 'interfaces/films'\n\nimport { InternalLink } from 'components/common/link/internal'\nimport {\n  ItemLayout,\n  ItemLayoutHeader,\n  ItemLayoutFooter,\n} from 'components/common/items-list/item-layout'\nimport { DetailsTable } from 'components/common/details-table'\nimport { FavoriteButton } from 'components/common/favorite-button'\n\nexport interface PersonPropsI {\n  item: FilmI\n}\n\nfunction Film(props: PersonPropsI) {\n  const { item } = props\n\n  const details = {\n    Episode: item.episode_id,\n    Director: item.director,\n    Producer: item.producer,\n    'Release date': item.release_date,\n  }\n\n  return (\n    <ItemLayout>\n      <ItemLayoutHeader title={item.title} />\n      <DetailsTable details={details} />\n      <ItemLayoutFooter>\n        <InternalLink to={item.url}>Reed more...</InternalLink>\n        <FavoriteButton url={item.url} />\n      </ItemLayoutFooter>\n    </ItemLayout>\n  )\n}\n\nexport { Film }\n","import { FilmI } from 'interfaces/films'\n\nimport { ItemsList } from 'components/common/items-list'\nimport { Film } from './film'\n\nexport interface FilmsListPropsI {\n  entities: FilmI[]\n}\n\nfunction FilmsList(props: FilmsListPropsI) {\n  const { entities } = props\n\n  return <ItemsList items={entities} Item={Film} title=\"Films:\" />\n}\n\nexport { FilmsList }\n","import { FilmI } from 'interfaces/films'\n\nimport { Flex } from 'components/common/flex'\nimport { FavoriteButton } from 'components/common/favorite-button'\nimport { DetailsTable } from 'components/common/details-table'\nimport { RelationsLinks } from 'components/common/relations-links'\n\nexport interface FilmDetailsPropsI {\n  entity: FilmI\n}\n\nfunction FilmDetails(props: FilmDetailsPropsI) {\n  const { entity } = props\n\n  const details = {\n    Director: entity.director,\n    Episode: entity.episode_id,\n    'Opening crawl': entity.opening_crawl,\n    Producer: entity.producer,\n    'Release date': entity.release_date,\n  }\n\n  return (\n    <article>\n      <Flex as=\"header\">\n        <h1>{entity.title}</h1>\n        <FavoriteButton url={entity.url} />\n      </Flex>\n      <DetailsTable details={details} />\n      <Flex wrap align=\"start\">\n        <RelationsLinks\n          title=\"Characters:\"\n          relationType=\"people\"\n          relationUrls={entity.characters}\n        />\n        <RelationsLinks\n          title=\"Vehicles:\"\n          relationType=\"vehicles\"\n          relationUrls={entity.vehicles}\n        />\n        <RelationsLinks\n          title=\"Planets:\"\n          relationType=\"planets\"\n          relationUrls={entity.planets}\n        />\n      </Flex>\n    </article>\n  )\n}\n\nexport { FilmDetails }\n","import { PlanetI } from 'interfaces/planets'\n\nimport { InternalLink } from 'components/common/link/internal'\nimport {\n  ItemLayout,\n  ItemLayoutHeader,\n  ItemLayoutFooter,\n} from 'components/common/items-list/item-layout'\nimport { DetailsTable } from 'components/common/details-table'\nimport { FavoriteButton } from 'components/common/favorite-button'\n\nexport interface PlanetPropsI {\n  item: PlanetI\n}\n\nfunction Planet(props: PlanetPropsI) {\n  const { item } = props\n\n  const details = {\n    Climate: item.climate,\n    Diameter: item.diameter,\n    Gravity: item.gravity,\n    'Orbital period': item.orbital_period,\n    Population: item.population,\n    'Rotation period': item.rotation_period,\n    Terrain: item.terrain,\n    'Surface water': item.surface_water,\n  }\n\n  return (\n    <ItemLayout>\n      <ItemLayoutHeader title={item.name} />\n      <DetailsTable details={details} />\n      <ItemLayoutFooter>\n        <InternalLink to={item.url}>Reed more...</InternalLink>\n        <FavoriteButton url={item.url} />\n      </ItemLayoutFooter>\n    </ItemLayout>\n  )\n}\n\nexport { Planet }\n","import { PlanetI } from 'interfaces/planets'\n\nimport { ItemsList } from 'components/common/items-list'\nimport { Planet } from './planet'\n\nexport interface PlanetsListPropsI {\n  entities: PlanetI[]\n}\n\nfunction PlanetsList(props: PlanetsListPropsI) {\n  const { entities } = props\n\n  return <ItemsList items={entities} Item={Planet} title=\"Planets:\" />\n}\n\nexport { PlanetsList }\n","import { PlanetI } from 'interfaces/planets'\n\nimport { Flex } from 'components/common/flex'\nimport { FavoriteButton } from 'components/common/favorite-button'\nimport { DetailsTable } from 'components/common/details-table'\nimport { RelationsLinks } from 'components/common/relations-links'\n\nexport interface PlanetDetailsPropsI {\n  entity: PlanetI\n}\n\nfunction PlanetDetails(props: PlanetDetailsPropsI) {\n  const { entity } = props\n\n  const details = {\n    Climate: entity.climate,\n    Diameter: entity.diameter,\n    Gravity: entity.gravity,\n    'Orbital period': entity.orbital_period,\n    Population: entity.population,\n    'Rotation period': entity.rotation_period,\n    Terrain: entity.terrain,\n    'Surface water': entity.surface_water,\n  }\n\n  return (\n    <article>\n      <Flex as=\"header\">\n        <h1>{entity.name}</h1>\n        <FavoriteButton url={entity.url} />\n      </Flex>\n      <DetailsTable details={details} />\n      <Flex wrap align=\"start\">\n        <RelationsLinks\n          title=\"Films:\"\n          relationType=\"films\"\n          relationUrls={entity.films}\n        />\n        <RelationsLinks\n          title=\"People:\"\n          relationType=\"people\"\n          relationUrls={entity.residents}\n        />\n      </Flex>\n    </article>\n  )\n}\n\nexport { PlanetDetails }\n","import { RouteNames, routesMap } from './routes'\n\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom'\n\nimport { NotFound } from './system/NotFound'\n\nimport { Vehicles as VehiclesPage } from './vehicles/vehicles'\nimport { Vehicle as VehiclePage } from './vehicles/vehicle'\n\nimport { People as PeoplePage } from './people/people'\nimport { Person as PersonPage } from './people/person'\n\nimport { Films as FilmsPage } from './films/films'\nimport { Film as FilmPage } from './films/film'\n\nimport { Planets as PlanetsPage } from './planets/planets'\nimport { Planet as PlanetPage } from './planets/planet'\n\nconst routesPages = {\n  [RouteNames.films]: FilmsPage,\n  [RouteNames.film]: FilmPage,\n\n  [RouteNames.vehicles]: VehiclesPage,\n  [RouteNames.vehicle]: VehiclePage,\n\n  [RouteNames.people]: PeoplePage,\n  [RouteNames.person]: PersonPage,\n\n  [RouteNames.planets]: PlanetsPage,\n  [RouteNames.planet]: PlanetPage,\n}\n\nfunction Router() {\n  const routeNames = Object.keys(routesMap) as unknown as RouteNames[]\n\n  console.log('process.env', process.env)\n\n  return (\n    <BrowserRouter basename={process.env.REACT_APP_BASENAME_URL}>\n      <Routes>\n        {routeNames.map(routeName => {\n          const Page = routesPages[routeName]\n          const { path } = routesMap[routeName]\n\n          return <Route key={path} path={path} element={<Page />} />\n        })}\n        <Route\n          path=\"/\"\n          element={<Navigate replace to={routesMap[RouteNames.films].path} />}\n        />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport { Router }\n","import { useEffect } from 'react'\nimport { useCurrentPath } from 'hooks/router'\n\nimport { films } from 'store'\n\nimport { FooterNavigation } from 'components/common/footer-navigation'\nimport { FilmsList } from 'components/films/films-list'\nimport { PageLayout } from '../common/page-layout'\n\nfunction Films() {\n  const currentPath = useCurrentPath()\n\n  useEffect(() => {\n    films.actions.loadPageIfNeeded(currentPath)\n  }, [currentPath])\n\n  const status = films.store.usePickState(\n    state => state.statuses[currentPath],\n    [currentPath]\n  )\n  const page = films.store.usePickState(\n    state => state.pages[currentPath],\n    [currentPath]\n  )\n\n  if (!status?.loaded) {\n    return (\n      <PageLayout>\n        <h2>Loading...</h2>\n      </PageLayout>\n    )\n  }\n\n  if (status?.error) {\n    return (\n      <PageLayout>\n        <h2>Not found that page</h2>\n        <pre>{status.error}</pre>\n      </PageLayout>\n    )\n  }\n\n  const { results, next, previous } = page\n\n  return (\n    <PageLayout>\n      <FilmsList entities={results} />\n      <FooterNavigation next={next} previous={previous} />\n    </PageLayout>\n  )\n}\n\nexport { Films }\n","import { useCurrentPath } from 'hooks/router'\nimport { useEffect } from 'react'\n\nimport { films } from 'store'\n\nimport { FilmDetails } from 'components/films/film-details'\nimport { PageLayout } from '../common/page-layout'\n\nfunction Film() {\n  const currentPath = useCurrentPath()\n\n  useEffect(() => {\n    films.actions.loadEntityIfNeeded(currentPath)\n  }, [currentPath])\n\n  const status = films.store.usePickState(\n    state => state.statuses[currentPath],\n    [currentPath]\n  )\n  const entity = films.store.usePickState(\n    state => state.resources[currentPath],\n    [currentPath]\n  )\n\n  if (!status?.loaded) {\n    return (\n      <PageLayout>\n        <h2>Loading...</h2>\n      </PageLayout>\n    )\n  }\n\n  if (status?.error) {\n    return (\n      <PageLayout>\n        <h2>Not found that film</h2>\n        <pre>{status.error}</pre>\n      </PageLayout>\n    )\n  }\n\n  return (\n    <PageLayout>\n      <FilmDetails entity={entity} />\n    </PageLayout>\n  )\n}\n\nexport { Film }\n","import { useEffect } from 'react'\nimport { useCurrentPath } from 'hooks/router'\n\nimport { vehicles } from 'store'\n\nimport { PageLayout } from 'pages/common/page-layout'\nimport { FooterNavigation } from 'components/common/footer-navigation'\nimport { VehiclesList } from 'components/vehicles/vehicles-list'\n\nfunction Vehicles() {\n  const currentPath = useCurrentPath()\n\n  useEffect(() => {\n    vehicles.actions.loadPageIfNeeded(currentPath)\n  }, [currentPath])\n\n  const status = vehicles.store.usePickState(\n    state => state.statuses[currentPath],\n    [currentPath]\n  )\n  const page = vehicles.store.usePickState(\n    state => state.pages[currentPath],\n    [currentPath]\n  )\n\n  if (!status || status.loading) {\n    return (\n      <PageLayout>\n        <h2>Loading...</h2>\n      </PageLayout>\n    )\n  }\n\n  if (status?.error) {\n    return (\n      <PageLayout>\n        <h2>Not found that page</h2>\n        <pre>{status.error}</pre>\n      </PageLayout>\n    )\n  }\n\n  const { results, next, previous } = page\n\n  return (\n    <PageLayout>\n      <VehiclesList vehicles={results} />\n      <FooterNavigation next={next} previous={previous} />\n    </PageLayout>\n  )\n}\n\nexport { Vehicles }\n","import { useEffect } from 'react'\nimport { useCurrentPath } from 'hooks/router'\n\nimport { vehicles } from 'store'\n\nimport { PageLayout } from '../common/page-layout'\nimport { VehicleDetails } from 'components/vehicles/vehicle-details'\n\nfunction Vehicle() {\n  const currentPath = useCurrentPath()\n\n  useEffect(() => {\n    vehicles.actions.loadEntityIfNeeded(currentPath)\n  }, [currentPath])\n\n  const status = vehicles.store.usePickState(\n    state => state.statuses[currentPath],\n    [currentPath]\n  )\n  const entity = vehicles.store.usePickState(\n    state => state.resources[currentPath],\n    [currentPath]\n  )\n\n  if (!status || status.loading) {\n    return (\n      <PageLayout>\n        <h2>Loading...</h2>\n      </PageLayout>\n    )\n  }\n\n  if (status?.error) {\n    return (\n      <PageLayout>\n        <h2>Not found that vehicle</h2>\n        <pre>{status.error}</pre>\n      </PageLayout>\n    )\n  }\n\n  return (\n    <PageLayout>\n      <VehicleDetails entity={entity} />\n    </PageLayout>\n  )\n}\n\nexport { Vehicle }\n","import { useEffect } from 'react'\nimport { useCurrentPath } from 'hooks/router'\n\nimport { people } from 'store'\n\nimport { FooterNavigation } from 'components/common/footer-navigation'\nimport { PeopleList } from 'components/people/people-list'\nimport { PageLayout } from '../common/page-layout'\n\nfunction People() {\n  const currentPath = useCurrentPath()\n\n  useEffect(() => {\n    people.actions.loadPageIfNeeded(currentPath)\n  }, [currentPath])\n\n  const status = people.store.usePickState(\n    state => state.statuses[currentPath],\n    [currentPath]\n  )\n  const page = people.store.usePickState(\n    state => state.pages[currentPath],\n    [currentPath]\n  )\n\n  if (!status?.loaded) {\n    return (\n      <PageLayout>\n        <h2>Loading...</h2>\n      </PageLayout>\n    )\n  }\n\n  if (status?.error) {\n    return (\n      <PageLayout>\n        <h2>Not found that page</h2>\n        <pre>{status.error}</pre>\n      </PageLayout>\n    )\n  }\n\n  const { results, next, previous } = page\n\n  return (\n    <PageLayout>\n      <PeopleList people={results} />\n      <FooterNavigation next={next} previous={previous} />\n    </PageLayout>\n  )\n}\n\nexport { People }\n","import { useCurrentPath } from 'hooks/router'\nimport { useEffect } from 'react'\n\nimport { people } from 'store'\n\nimport { PersonDetails } from 'components/people/person-details'\nimport { PageLayout } from '../common/page-layout'\n\nfunction Person() {\n  const currentPath = useCurrentPath()\n\n  useEffect(() => {\n    people.actions.loadEntityIfNeeded(currentPath)\n  }, [currentPath])\n\n  const status = people.store.usePickState(\n    state => state.statuses[currentPath],\n    [currentPath]\n  )\n  const entity = people.store.usePickState(\n    state => state.resources[currentPath],\n    [currentPath]\n  )\n\n  if (!status?.loaded) {\n    return (\n      <PageLayout>\n        <h2>Loading...</h2>\n      </PageLayout>\n    )\n  }\n\n  if (status?.error) {\n    return (\n      <PageLayout>\n        <h2>Not found that person</h2>\n        <pre>{status.error}</pre>\n      </PageLayout>\n    )\n  }\n\n  return (\n    <PageLayout>\n      <PersonDetails entity={entity} />\n    </PageLayout>\n  )\n}\n\nexport { Person }\n","import { useEffect } from 'react'\nimport { useCurrentPath } from 'hooks/router'\n\nimport { planets } from 'store'\n\nimport { FooterNavigation } from 'components/common/footer-navigation'\nimport { PlanetsList } from 'components/planets/planets-list'\nimport { PageLayout } from '../common/page-layout'\n\nfunction Planets() {\n  const currentPath = useCurrentPath()\n\n  useEffect(() => {\n    planets.actions.loadPageIfNeeded(currentPath)\n  }, [currentPath])\n\n  const status = planets.store.usePickState(\n    state => state.statuses[currentPath],\n    [currentPath]\n  )\n  const page = planets.store.usePickState(\n    state => state.pages[currentPath],\n    [currentPath]\n  )\n\n  if (!status?.loaded) {\n    return (\n      <PageLayout>\n        <h2>Loading...</h2>\n      </PageLayout>\n    )\n  }\n\n  if (status?.error) {\n    return (\n      <PageLayout>\n        <h2>Not found that page</h2>\n        <pre>{status.error}</pre>\n      </PageLayout>\n    )\n  }\n\n  const { results, next, previous } = page\n\n  return (\n    <PageLayout>\n      <PlanetsList entities={results} />\n      <FooterNavigation next={next} previous={previous} />\n    </PageLayout>\n  )\n}\n\nexport { Planets }\n","import { useCurrentPath } from 'hooks/router'\nimport { useEffect } from 'react'\n\nimport { planets } from 'store'\n\nimport { PlanetDetails } from 'components/planets/planet-details'\nimport { PageLayout } from '../common/page-layout'\n\nfunction Planet() {\n  const currentPath = useCurrentPath()\n\n  useEffect(() => {\n    planets.actions.loadEntityIfNeeded(currentPath)\n  }, [currentPath])\n\n  const status = planets.store.usePickState(\n    state => state.statuses[currentPath],\n    [currentPath]\n  )\n  const entity = planets.store.usePickState(\n    state => state.resources[currentPath],\n    [currentPath]\n  )\n\n  if (!status?.loaded) {\n    return (\n      <PageLayout>\n        <h2>Loading...</h2>\n      </PageLayout>\n    )\n  }\n\n  if (status?.error) {\n    return (\n      <PageLayout>\n        <h2>Not found that film</h2>\n        <pre>{status.error}</pre>\n      </PageLayout>\n    )\n  }\n\n  return (\n    <PageLayout>\n      <PlanetDetails entity={entity} />\n    </PageLayout>\n  )\n}\n\nexport { Planet }\n","import 'normalize.css/normalize.css'\n\nimport './App.css'\n\nimport { Router } from './pages/router'\n\nfunction App() {\n  return <Router />\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}